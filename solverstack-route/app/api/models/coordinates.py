# coding: utf-8

from __future__ import absolute_import

from app import util
from app.api.models.base_model_ import Model
from app.api.models.latitude import Latitude  # noqa: F401,E501
from app.api.models.longitude import Longitude  # noqa: F401,E501


class Coordinates(Model):
    """NOTE: This class is auto generated by the swagger code generator
    program.

    Do not edit the class manually.
    """

    def __init__(self, latitude: Latitude = None, longitude: Longitude = None):  # noqa: E501
        """Coordinates - a model defined in Swagger

        :param latitude: The latitude of this Coordinates.  # noqa: E501
        :type latitude: Latitude
        :param longitude: The longitude of this Coordinates.  # noqa: E501
        :type longitude: Longitude
        """
        self.swagger_types = {"latitude": Latitude, "longitude": Longitude}

        self.attribute_map = {"latitude": "latitude", "longitude": "longitude"}
        self._latitude = latitude
        self._longitude = longitude

    @classmethod
    def from_dict(cls, dikt) -> "Coordinates":
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Coordinates of this Coordinates.  # noqa: E501
        :rtype: Coordinates
        """
        return util.deserialize_model(dikt, cls)

    @property
    def latitude(self) -> Latitude:
        """Gets the latitude of this Coordinates.


        :return: The latitude of this Coordinates.
        :rtype: Latitude
        """
        return self._latitude

    @latitude.setter
    def latitude(self, latitude: Latitude):
        """Sets the latitude of this Coordinates.


        :param latitude: The latitude of this Coordinates.
        :type latitude: Latitude
        """
        if latitude is None:
            raise ValueError("Invalid value for `latitude`, must not be `None`")  # noqa: E501

        self._latitude = latitude

    @property
    def longitude(self) -> Longitude:
        """Gets the longitude of this Coordinates.


        :return: The longitude of this Coordinates.
        :rtype: Longitude
        """
        return self._longitude

    @longitude.setter
    def longitude(self, longitude: Longitude):
        """Sets the longitude of this Coordinates.


        :param longitude: The longitude of this Coordinates.
        :type longitude: Longitude
        """
        if longitude is None:
            raise ValueError("Invalid value for `longitude`, must not be `None`")  # noqa: E501

        self._longitude = longitude
